1. Что за единица измерения - `fr`?
Это гибкая единица длины измерения, которая рассчитывается исходя из количества доступного пространства в grid-контейнере. 
Расшифровывается как fraction, т.е. часть или доля. Например, задав список треков 1fr 1fr 1fr, доступное пространство делится на 3 и распределяется поровну между тремя колонками. 

2. Как можно задать грид с 5 колонками шириной по 20%? Минимум 2 способа.
- grid-template-columns: 20% 20% 20% 20% 20%
- grid-template-columns: repeat(5, 20%)

3. Что такое auto-fill и auto-fit ?
`Auto-fill` пытается поместить наибольшее количество повторяющихся элементов в колонку, сколько их может уместиться без переполнения. Когда места для добавления другого элемента не хватает, следующий элемент будет размещён на следующей строке, а это место, которое он не смог заполнить, останется пустым.
`Auto-fit` ведёт себя почти как **`auto-fill`, за исключением того, что любая пустая область будет схлопываться и растягивать элементы в этой строке – напоминая поведение флексбоксов, когда по мере уменьшения доступного пространства колонки схлопываются.

4. Как сделать такую табличку? 
.container {
  display: grid;
  grid-template-columns: 100px 30% 1fr;
  grid-template-rows: 200px 100px;
}

5. Как сделать такое выравнивание в грид-контейнере? 
justify-content: space-between

6. Что такое и как задается grid area?
Это пространство внутри grid контейнера, в которое может быть помещен один или больше grid элементов. Этот элемент может состоять из одной или более grid ячеек.

7. Приведите пример использования grid-template-areas
Вариант разметки с пустым полем:
.item-1 {
  grid-area: head;
}
.item-2 {
  grid-area: main;
}
.item-3 {
  grid-area: side;
}
.item-4 {
  grid-area: footer;
}

.container {
  display: grid;
  grid-template-columns: 2fr 2fr 1fr 2fr;
  grid-template-rows: 100px 200px 100px;
  grid-template-areas:
    "head head . side"
    "main main . side"
    "footer footer footer footer";
}

8. Каким свойством можно задать такое поведение элементов?
Auto-fit

9. Самостоятельно разберитесь, как работают именованные линии? Есть ли какие-то рекомендованные правила наименований? Если да, то какие?
Имена линиям можно задать внутри квадратных скобок в списке треков. Хорошей практикой является именование с использованием суффикса -start для начальных линий (не важно, это линия строки или колонки), и -end для конечных. 
В итоге должно получиться main-start и main-end или sidebar-start и sidebar-end
Например:
 grid-template-rows: [header-start] 20vh [header-end] ;
 grid-template-columns: [sidebar-start] 1fr 2fr [sidebar-end] 1fr 2fr 1fr 2fr;
Довольно часто конечная линия одной части сетки и начальная линия другой части совпадают, но это не проблема, так как линии могут иметь несколько имён. Задать линии несколько имён можно, добавив их через пробел внутри квадратных скобок.

10. Как проще всего задать 12 одинаковых по ширине колонок?
grid-template-columns: repeat (12, 1fr)



