1. Какие кавычки можно использовать для создания строк в JS и в чем разница между ними?
- двойные
- одинарные - не отличаются от двойных по функционалу
- обратные - имеют расширенный функционал и позволяют встаивать произвольные выражения, обернув их в ${...}, а также писать многострочный код

2. Какими методами можно найти подстроку в строке? Приведите пример.
- Метод `indexOf()` возвращает индекс в первое вхождение указанного текста в строку:
let str = "some text in a string";
console.log(str.indexOf("text")); // 5
- Метод lastIndexOf() возвращает индекс последнего вхождения указанного текста в строку:
let str = "some text in a string text";
console.log(str.lastIndexOf("text")); // 22
- Метод search() тоже ищет строки по заданному значению и возвращает позицию совпадения, но может принимать гораздо более мощные значения поиска (регулярные выражения):
let str = "some text in a string";
console.log(str.search("text")); // 5
- Более современный метод str.includes(substr, pos) возвращает true, если в строке str есть подстрока substr, либо false, если нет.
alert( "Widget with id".includes("Widget") ); // true
alert( "Hello".includes("Bye") ); // false
- Методы str.startsWith и str.endsWith проверяют, соответственно, начинается ли и заканчивается ли строка определённой строкой:
alert( "Widget".startsWith("Wid") ); // true, "Wid" — начало "Widget"
alert( "Widget".endsWith("get") ); // true, "get" — окончание "Widget"

3. Самостоятельно разберитесь, зачем нужен специальный символ \n?
«Cимвол перевода строки», позволяет создавать многострочные строки с помощью одинарных и двойных кавычек:
let guestList = "Guests:\n * John\n * Pete\n * Mary";
alert(guestList); // список гостей, состоящий из нескольких строк

4. Напишите код, который делает первый символ заглавным. Например, `"настя"` ⇒ `"Настя"`
let str  = "настя";
str = str[0].toUpperCase() + str.slice(1);
console.log(str);

5. Как создать дату 24 января 2021 года, 22 часа 51 минута? Временная зона – местная.
new Date(2021, 0, 24, 22, 51, 0, 0);

6. Как посчитать, сколько секунд осталось до завтра?
let now = new Date();
let tomorrow = new Date().setHours(24, 0, 0);
seconds = parseInt(tomorrow - now) / 1000;
console.log(seconds); 

7. Как выделить из строки с денежной суммой (например, 120р. или 99€) только цифры, т.е. 120 и 99?
let str = "99€";
console.log (parseInt(str));

8. Зачем нужны функции `join` и `split`?
Для преобразование массива в строку и обратно.
Строку можно преобразовать в массив с методом `split()`:
let txt = "Москва,Санкт-Петербург,Новосибирск,Екатеринбург";   // строка
let array = txt.split(",");          // разделитель - запятая
//результатом становится массив ["Москва","Санкт-Петербург","Новосибирск","Екатеринбург"]
Обратное действие (склеить из массива строку) - это функция join:
let arr = [ 1, 2, 3 ];
arr.join('+'); // "1+2+3"
arr.join();  // "1,2,3" если без параметров, то автоматически ставится запятая как разделитель 

9. Какой из вариантов округления делает это по математическим правилам?
Maths.round()

10. Как сгенерировать случайное число от 1 до 100? 
Math.round((Math.random()*99)+1)

11. Зачем нужна функция `str.trim()` ?
str.trim() — убирает пробелы в начале и конце строки.

12. Что такое флаг?
Это необязательная составная часть регулярных выражений, которые влияют на поиск. 
Пишутся через /
В JavaScript их всего шесть:
i - С этим флагом поиск не зависит от регистра: нет разницы между A и a.
g - С этим флагом поиск ищет все совпадения, без него – только первое.
m - Многострочный режим (рассматривается в главе Многострочный режим якорей ^ $, флаг "m").
s - Включает режим «dotall», при котором точка . может соответствовать символу перевода строки \n.
u - Включает полную поддержку юникода. Флаг разрешает корректную обработку суррогатных пар.
y - Режим поиска на конкретной позиции в тексте.
