1. Какие есть способы объявления функций?
- Function Declaration (основной)
- Function Expression
- Стрелочные функции (самый новый)

2. Приведите примеры вызова одной и той же функции всеми известными вам способами.
Function Declaration: 
function sum(a, b) { 
return a + b;}

Function Expression:
var sum = function(a, b) {
return a + b;};

Arrow functions:
let sum = (a, b) => a + b;

3. В чем разница между тестированием и отладкой (дебаггингом)? А что такое логирование?
Тестирование предназначено для обнаружения дефектов работы программы, отслеживание что программа делает то, что она должна делать. Он может быть ручным (кликать на кнопки, проверять переходы и т.п.) или автоматизированным (специально написанный скрипт для проверки).
Отладка - это процесс поиска и исправления ошибок в скрипте.  Это всегда ручной, одноразовый процесс, так как все ошибки различны. Для этого применяются инструменты отладки в браузерах, где, при необходимости, можно посмотреть, что происходит на каждом шаге выполнения кода. 
Логирование - вывод в консоль из кода с помощью функции console.log. Полезно для проверки каких-то функций, т.к. не видно обычному пользователю.

4. В чем разница между Function Expression и Function Declaration? 
Во-первых, синтаксис:
Function Declaration: функция объявляется отдельной конструкцией «function…» в основном потоке кода.
Function Expression: функция, созданная внутри другого выражения или синтаксической конструкции. В примере из вопроса 2 функция создаётся в правой части «выражения присваивания» =:
Во-вторых, в том, когда создаётся функция движком JavaScript.
Function Expression создаётся, когда выполнение доходит до него (как поток выполнения достигнет правой части выражения присваивания let sum = function…), и затем уже может использоваться.
Function Declaration можно использовать во всем скрипте (или блоке кода, если функция объявлена в блоке).**
Другими словами, когда движок JavaScript *готовится* выполнять скрипт или блок кода, прежде всего он ищет в нём Function Declaration и создаёт все такие функции. Можно считать этот процесс «стадией инициализации».
И только после того, как все объявления Function Declaration будут обработаны, продолжится выполнение.
В результате, функции, созданные, как Function Declaration могут быть вызваны раньше своих определений.

5. Что делает функция `console.log()`?
Выводит информацию в консоль

6. Что такое BOM и DOM?
Объектная модель браузера (Browser Object Model, BOM) – это дополнительные объекты (например,  navigator, location, функции alert/confirm/prompt), предоставляемые браузером (окружением), чтобы работать со всем, кроме документа.
Document Object Model, сокращённо DOM – объектная модель документа, которая представляет все содержимое страницы в виде объектов, которые можно менять. 
DOM – это представление HTML-документа в виде дерева тегов. Каждый узел этого дерева – это объект. Теги являются *узлами-элементами* (или просто элементами). Они образуют структуру дерева: `<html>` – это корневой узел, `<head>` и `<body>` его дочерние узлы и т.д.
7. Найти на странице
- Таблицу с `id="age-table"`
        let table = document.getElementById('age-table');
        console.log (table); // выведет в консоль код таблицы

- Все элементы `label` внутри этой таблицы (их три)
        let labels = table.getElementsByTagName('label');
        console.log(labels);

- Форму `form` с именем `name="search"`

8. Как сделать переход на другую страницу при клике на кнопку (без `<a href=...>`, только средствами JavaScript)?
Через объект location. Например:
alert(location.href);
if (confirm("Перейти на Wikipedia?")) {
  location.href = "https://wikipedia.org"; 
}
или по нажатию на кнопку с вызовом функции:
let changeLocation = () => {
    window.location.href = "";
};

9. Как можно обнулить (очистить) значение внутри input?
Обратиться к этому input с помощью document.getElementById (или ByTagName) и изменить значение на пустое:
    function clickMe () {
        let inputClear = document.getElementById('nameInput');
        nameInput.value = ' ';
    }

10. Как будет выглядеть ваша функция приветствия из прошлого домашнего задания, если ее переписать в стрелочном формате?
let showMessage = () => {
    let name = prompt('Как тебя зовут?', "Геральт из Ривии");
    alert(`Привет, ${name}!`);
};


