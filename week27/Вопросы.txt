1. Какую ошибку я допустила в [этом](https://www.notion.so/27-f4e53b90e9ba4523b4aaf1d2a1117da4) примере?  
Цвет прописан словом

2. Какие есть способы работы со стилями в React?
- Инлайновая стилизация
- Таблицы стилей CSS
- CSS модули
- CSS-препроцессоры

3. Как будет выглядеть карточка товара, если ей передать аттрибут `addedToCart`===0?


4. Какие еще проверки нужно было бы сделать для аттрибута `addedToCart`?
Как вариант, проверка на отрицательное число

5. Клиент попросил повесить тег "New" на товары из новой коллекции. Как это сделать, какой условный оператор выбрать?
Добавить тег как атрибут через оператор &&. 
Если условие истинно (true), то элемент, идущий непосредственно за && (т.е. тег "New"), будет передан на вывод. 
Если же оно ложно (false), то React проигнорирует и пропустит его.

6. Какими тремя способами можно написать условный рендеринг? 
- if
- Тернарный оператор
- Логический оператор &&

7. Представьте, что вы пишете компонент логина. 
Если пользователь авторизован, то мы показываем его имя, а если нет, то даем возможность ввода логина и пароля. 
Какой код для этого нужно написать, если за авторизацию пользователя отвечает флаг isAutorized?
         {isAutorized
                        ? <ShowLogin isAutorized={isAutorized} />
                        : <ShowForm />
                    }

8. В чем преимущества использования препроцессоров? 
- Разделение на небольшие файлы. Мы можем организовать блочную систему стилей
- Переменные. Вынести общие (цвета, размеры шрифта, и т. д.) и импортировать их в нужный файл
- Математические операции:
.tabs {
  width: calc(100% - 3em);
}
- Вложения. Позволяет не повторять написание селектора, внутри которого нужно что-то стилизовать. 
- Амперсанд. Позволяет не повторять родительский селектор, быстро менять его. Помогает сделать код читабельней.
- Примеси (или миксины). Набор правил, который можно использовать многократно.

Какой есть еще способ использовать переменные, кроме $ в препроцессорах?
@value customBlue: #0c77f8;