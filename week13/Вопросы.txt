1. Какие бывают варианты объявления переменных?
- ключевое слово let (let название переменной) - актуальный вариант объявления
- ключевое слово var - устаревший вариант, почти то же самое, что let
Переменная может быть объявлена единожды, повторное объявление будет ошибкой

2. Что выведет этот скрипт?
let name = "Ilya";
alert (`hello ${1}`); // выведет hello 1
alert ( `hello ${"name"}` ); // hello name
alert ( `hello ${name}` ); // hello Ilya

3. Какое значение будет в *z*?
    var x = 5;         
    var y = 2;        
    var z = x + y;
    alert(z); // 7

4. Какими тремя способами можно подключить JavaScript код?
Аналогично CSS:
- в html внтури тега <script> </script> (в head или body)
- строковая запись в html внутри тега вместе с событием, по наступлению которого этот код должен выполниться (<button onClick="alert('Привет!')">Нажми меня</button>)
- через внешний файл (<script src="путь_к_файлу_скрипта/script.js"></script>)

5. Есть ли какая-то разница между записями typeof str и typeof(str)?
typeof str - синтаксис оператора
typeof(str) - синтаксис функции
Работают они одинаково, но первый синтаксис короче.

6. Что вернет код? 
undefined, т.к. добавлен перевод строки между return и его значением

7. Какой результат будет у выражений ниже?
"" + 1 + 0 // 10 - "" - строка в начале выражения преобразует всю запись в строчное сложение 
"" - 1 + 0 // -1 - вычитание идет первым, поэтому "" преобразуется в числовой формат (0)
true + false // 1 - преобразуются в числовой формат (1+0)
6 / "3" // 2 - деление производится только с числами
"2" * "3" // 6 - умножение производится только с числами
4 + 5 + "px" // 9px - сложение по порядку, сначала числовое, потом строчное
"$" + 4 + 5 // $45 - "$" - строка в начале выражения преобразует всю запись в строчное сложение 
"4" - 2 // 2 - вычитание производится с числами
"4px" - 2 // NaN - 4px преобразуется в числовой формат как NaN
7 / 0 // Infinity - деление на 0
"  -9  " + 5 // -9 5 - "  -9  " - это строка, сложение
"  -9  " - 5 // -14 - вычитание производится только с числами, "  -9  " преобразуется в число
null + 1 // 1 - null преобразуется в число 0
undefined + 1 // NaN - undefined преобразуется в NaN в числовом формате
" \t \n" - 2  // -2 - пробельные символы, такие как \t (знак табуляции) и \n (перевод строки), по краям строки игнорируются при преобразовании в число, так что строка " \t \n", аналогично пустой строке, становится 0 после численного преобразования.

8.Код работает неправильно. Код в примере выводит `12` (для значения полей по умолчанию).В чём ошибка? Исправьте её. Результат должен быть `3`.
Верный вариант:
let a = prompt("Первое число?", 1);
let b = prompt("Второе число?", 2);

alert(+a + +b); 

Ошибка в выводе данных, alert всегда выводит строки, поэтому их необходимо преобразовать в числа для корректного сложения 

9.Что будет в x?
x = 5; 
x++; // инкремент, увеличит значение на 1 (5+1=6)
x -= 2; // эквивалентно х=х-2 (х=6-2)
alert(x); // ответ 4

10. Что выведет этот код?
function sum(x, y=0) {
  return x+y;
} 
alert(sum(5)); // 5, т.к. по умолчанию у задан равным 0