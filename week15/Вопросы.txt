1. Сколько есть видов условных операторов?
5:
- условный оператор if (с одной ветвью)
- условный оператор if...else (с двумя ветвями)
- условный оператор else if... (с несколькими ветвями)
- тернарный оператор (?:)
- оператор выбора switch

2. Перепишите пример про определение времени суток через тернарный оператор:
let time = new Date().getHours();
let message = (time < 10) ? alert ('Доброе утро!') : alert ('Добрый день!');

3.Выведется ли alert?
Да, т.к. 0 заключен в кавычки и это непустая строка

4. Чему будет равно условие (правда или ложь) в этих случаях, если x = 6 and y = 3?

- (x < 10 && y > 1) *логическое И* // правда
- (x == 5 || y == 5) *логическое ИЛИ* // ложь
- !(x == y) *логическое НЕ* // правда

5. Назовите три способа назначения обработчиков событий. Какой из них самый универсальный?
- в разметке, в атрибуте, который называется on<событие>
-  используя свойство DOM-элемента on<событие>
- ри помощи специальных методов addEventListener и removeEventListener - универсальный, т.к. можно повесить несколько обработчиков на одно событие.

6. Корректна ли такая запись? button.onclick = hello();
нет, т.к. это вызов функции результат которой неопреден. Корректно button.onclick = hello

7. Какие есть события у клавиатуры?
keypress, keydown и keyup – когда пользователь нажимает / отпускает клавишу

8. Что такое объект события и какие у него могут быть свойства?
Иногда могут понадобиться детали: координаты курсора, введённый символ и другие, в зависимости от события.
Когда происходит событие, браузер создаёт объект события, записывает в него детали и передаёт его в качестве аргумента функции-обработчику.
Некоторые свойства объекта `event`:
- event.type`**Тип события, в данном случае `"click"`.
- event.currentTarget`**Элемент, на котором сработал обработчик. Значение – обычно такое же, как и у `this`, но если обработчик является функцией-стрелкой или при помощи `bind` привязан другой объект в качестве `this`, то мы можем получить элемент из `event.currentTarget`.
- event.clientX / event.clientY`**Координаты курсора в момент клика относительно окна, для событий мыши.

9. Самостоятельно разберитесь, какие бывают операторы сравнения? Напишите сюда как выглядят сравнение "равно", "не равно", "больше чем".
Многие операторы сравнения известны нам из математики.
В JavaScript они записываются так:
Больше/меньше: a > b, a < b.
Больше/меньше или равно: a >= b, a <= b.
Равно: a == b - для сравнения используется двойной знак равенства ==. Один знак равенства a = b означает присваивание.
Не равно. В математике обозначается символом ≠, но в JavaScript записывается как a != b.

